---
layout: post
title: Anatomy of a Malware Ad on NYTimes.com
date: Sep 13, 2009
redirects:
- /anatomy-of-a-malware-ad-on-nytimes-com
---

<p>On Saturday evening, Avast displayed a malware warning as I loaded a nytimes.com article.&nbsp; After some digging, here's the malware I found.</p>
<h2><!--more-->Ad Delivery</h2>
<p><span>nytimes.com article pages include an ad placement with the HTML DOM ID <code>adxBigAd</code>.&nbsp; From loading a few articles, they seems to rotate between a banner and an iframe.</span> <span>On this article, a 300x250 iframe was inlining this URL: <code>tradenton.com</code> slash <code>?id=21610438</code></span> <em>(note: I don't recommend visiting it, and have URLs are not linked where possible)</em> <span>A comment gave the campaign ID as<code>Vonage01_1163613_nyt12</code>, though it was obviously unrelated to Vonage.&nbsp; tradenton.com was registered Sept. 2, 2009, so it may have had a previous owner. </span></p>
<h2><span>Injection</span></h2>
<p><span>tradenton.com serves a 15-line HTML snipped containing this JavaScript:</span>
<script src="http://gist.github.com/186462.js"></script>
<span> As anyone who has looked at phishing links knows, this is nasty on a couple levels.  It's eval()'ing escaped code, which is almost never needed to serve an ad.  Note that the variable <code>action_URL</code> is defined but never used.  After unescaping the code, this is what's being run:</span>
<script src="http://gist.github.com/186464.js"></script>
What's served by <code>harlingens.com</code> slash <code>includes02.js</code>?  Aha!  The eval'ed JavaScript is requesting a second Javascript, which hits <code>action_URL</code>:
<script src="http://gist.github.com/186466.js"></script>
</p>
<h2>Malware</h2>
<p><span>Now we're talking.  Requesting that <code>action_URL</code> on <code>sex-and-the-city.cn</code> actually serves a HTTP 302 Redirect to <code>protection-check07.com</code> slash <code>1/?sess=%3DGQx3jzwMi02MyZpcD0yMDguNzUuNTcuMTIxJnRpbWU9MTI1NjgwMI0MaQ%3DN</code>.  And we hit pay dirt.  It's a fake page for a non-existent antivirus app, which is actually malware.  Titled "<code>My computer Online Scan</code>", this page displays this JS alert:</span></p>
<p><span> [[posterous-content:bgqmAGjDAyatJCqftmkv]]<br /><strong>&nbsp;</strong></span></p>
<p>&nbsp;</p>
<p><span><strong>Popup from malware advertised on nytimes.com</strong><br /> </span></p>
<p><span>Then resizes the browser window into a full-screen application-style, as if it had become a virus scanner.  Some highlights from the static content and JS on this page:</span></p>
<p><span><code> Dont close this window, if your want you PC to be protected.</code></span></p>
<p><span><code>353 trojans</code></span></p>
<p><span><code>You need to remove this threat as soon as possible!</code></span></p>
<p><span><code>Scan procedures finished.</code></span></p>
<p><span><code>431 Probably harmfull items was found!</code></span></p>
<p>&nbsp;</p>
<p><span>Here's a screen shot: </span></p>
<p><span>[[posterous-content:cmgxbjEIaashFcynAJbp]]<br /><strong>screenshot of web page of malware advertised on nytimes.com</strong></span></p>
<p><span><strong>&nbsp;</strong><br /> </span> <span>Here's <a href="http://gist.github.com/186467">full HTML source</a> in a gist viewer.</span> <span>As usual, these phishers haven't sprung for spelling or grammar checkers.</span></p>
<p><span>The page also uses IP-based geocoding by inlining its own iframe called <code>geoip.php</code>, which has city-level granularity (though it was off by 1,000 miles for me).  The "Full System Cleanup" link goes to <code>/download.php?id=2006-63</code> on the same server, which serves a file called <code>Scanner-b4ba2_2006-63.exe</code>.</span></p>
<p><span>That redirects to <code>/download/Scanner-b4ba2_2006-63.exe</code>, a static file with the checksum <code>6c5b5669151337ca51ec45b1f5785d02</code>.  Running strings on this 167 KB program - too small for any virus scanner - has it requesting administrator privileges, though I haven't done detailed forensics.</span></p>
<h2>Notes</h2>
<p><span>As of Sept. 12, 2009, <code>tradenton.com</code> and <code>harlingens.com</code> resolved to 212.117.166.69.  <code>sex-and-the-city.cn</code> resolved to 94.102.48.29.  <code>protection-check07.com</code> had 3 A records: 91.212.107.5, 94.102.51.26, 88.198.107.25.  Also, I changed indentation and spacing for readability, so checksums on gist may not match source files.</span></p>